# apiVersion: v1
# kind: Pod
# metadata:
#   name: simple-nginx-pod
# spec:
#   containers:
#     - name: nginx
#       image: nginx:1.14.2
#       ports:
#         - containerPort: 80
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: storage-volume
# spec:
#   # initContainers:
#   #   - name: init-image
#   #     image: rkalluru/learnk8s:init-container-html-generator
#   #     volumeMounts:
#   #       - name: empty
#   #         mountPath: /mnt/html
#   containers:
#     - name: side-car-container
#       image: rkalluru/learnk8s:side-car-html-generator
#       volumeMounts:
#         - name: empty
#           mountPath: /mnt/html
#     - name: nginx
#       image: nginx:1.14.2
#       volumeMounts:
#         - name: empty
#           mountPath: /usr/share/nginx/html
#   volumes:
#     - name: empty
#       emptyDir: {}

# apiVersion: apps/v1
# kind: ReplicaSet
# metadata:
#   name: replicaset-example
#   labels:
#     app: nginx
#     project: example
# spec:
#   replicas: 3
#   selector:
#     matchLabels:
#       app: nginx
#   template:
#     metadata:
#       labels:
#         app: nginx
#     spec:
#       containers:
#         - name: nginx
#           image: nginx

# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: config-map1
# data:
#   player-lives: "3"
#   ui_filename: "user-interface"
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: config-map-pod
# spec:
#   containers:
#     - name: config-container
#       image: nginx:1.14.2
#       env:
#         - name: player-lives
#           valueFrom:
#             configMapKeyRef:
#               name: config-map1
#               key: player-lives
#         - name: ui_filename
#           valueFrom:
#             configMapKeyRef:
#               name: config-map1
#               key: ui_filename

# # sending all the config map values at a same time
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: config-map-2
# spec:
#   containers:
#     - name: config-container-2
#       image: nginx:1.14
#       envFrom:
#         - configMapRef:
#             name: config-map1

# here we are creating a conf map with the actual file that are not key - value pairs
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: nginx-conf
# data:
#   conf: |
#     user nginx; nginx.conf details
# ---
# apiVersion: v1
# kind: ResourceQuota
# metadata:
#   name: quota-3
# spec:
#   hard:
#     requests.cpu: "20"
#     requests.memory: "20Mi"
#     limits.cpu: "20"
#     limits.memory: "20Mi"
#     pods: 4
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: pod-1
# spec:
#   containers:
#     - name: container-1
#       image: nginx:1.14.2
#       ports:
#         - containerPort: 80
#       resources:
#         requests:
#           cpu: "5"
#           memory: "5Mi"
#         limits:
#           cpu: "5"
#           memory: "5Mi"
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: pod-2
# spec:
#   containers:
#     - name: container-2
#       image: nginx:1.14.2
#       ports:
#         - containerPort: 80
#       resources:
#         requests:
#           cpu: "5"
#           memory: "5Mi"
#         limits:
#           cpu: "5"
#           memory: "5Mi"
# apiVersion: scheduling.k8s.io/v1
# kind: PriorityClass
# metadata:
#   name: high-priority-nonpreempting
# value: 1000000
# preemptionPolicy: Never
# globalDefault: false
# description: "This priority class will not cause other pods to be preempted."
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: deployment-1
#   labels:
#     app: nginx-1
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: nginx-1
#   template:
#     metadata:
#       labels:
#         app: nginx-1
#     spec:
#       priorityClassName: high-priority-nonpreempting
#       containers:
#         - name: container-1
#           image: nginx:1.14.2
#           ports:
#             - containerPort: 80
#           resources:
#             requests:
#               cpu: "5"
#               memory: "5Mi"
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hpa
  labels:
    app: hpa
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hpa
  template:
    metadata:
      labels:
        app: hpa
    spec:
      containers:
        - name: container
          image: rkalluru/hpa
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: "250m"
              memory: "64Mi"
            limits:
              cpu: "500m"
              memory: "128Mi"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoScaler
metadata:
  name: hpa-test
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hpa
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
